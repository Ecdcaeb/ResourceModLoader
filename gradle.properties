### Here is the build setting, if you want to bump version, edit description, go to `version.properties`


# Gradle Properties
org.gradle.jvmargs = -Xmx3G

java_version = 21
cleanroom_version=0.2.4-alpha

# Mapping Properties
mapping_channel= stable
mapping_version= 39-1.12

# Mod Information
# HIGHLY RECOMMEND complying with SemVer for mod_version: https://semver.org/
root_package=rml
mod_id=rml
mod_name=Resource Mod Loader
mod_version=1.1.2

# Mod Metadata (Optional)
mod_description=a modloader which load mods from resource packs.(in mods/)
mod_url=https://github.com/Ecdcaeb/ResourceModLoader
mod_update_json=https://raw.githubusercontent.com/Ecdcaeb/ResourceModLoader/main/docs/updates.json
# Delimit authors with commas
mod_authors=Hileb
mod_credits = """\
         Idealland   - they provided this framework for enviroment.\
         CleanroomMC - they provided this framework for enviroment.\
         Kappa       - they provided this framework for enviroment.\
         zfms4188    - support the RML at CraftTweaker compat! """
mod_logo_path=assets/rml/icon.png

# If any properties changes below this line, refresh gradle again to ensure everything is working correctly.


# Access Transformers
# A way to change visibility of Minecraft's classes, methods and fields
# An example access transformer file is given in the path: `src/main/resources/example_at.cfg`
# AT files should be in the root of src/main/resources with the filename formatted as: `mod_id_at.cfg`
# Use the property `access_transformer_locations` to state custom AT files if you aren't using the default `mod_id_at.cfg` location
# If multiple locations are stated, use spaces as the delimiter
use_access_transformer = true
access_transformer_locations = ${mod_id}_at.cfg

# Mixins
use_mixin = false
# Powerful tool to do runtime description changes of classes
# Wiki: https://github.com/SpongePowered/Mixin/wiki + https://github.com/CleanroomMC/MixinBooter/ + https://cleanroommc.com/wiki/forge-mod-development/mixin/preface
# A configuration defines a mixin set, and you may have as many mixin sets as you require for your application.
# Each config can only have one and only one package root.
# Delimit configs with spaces. Should only put configs name instead of full file name
mixin_configs = ${mod_id}
# A refmap is a json that denotes mapping conversions, this json is generated automatically, with the name `mixins.mod_id.refmap.json`
# Use the property `mixin_refmap` if you want it to use a different name, only one name is accepted
mixin_refmap = mixins.${mod_id}.refmap.json

# Coremods
# The most powerful way to change java classes at runtime, it is however very primitive with little documentation.
# Only make a coremod if you are absolutely sure of what you are doing
# Change the property `coremod_includes_mod` to false if your coremod doesn't have a @Mod annotation
# You MUST state a class name for `coremod_plugin_class_name` if you are making a coremod, the class should implement `IFMLLoadingPlugin`
is_coremod = true
coremod_includes_mod = false
coremod_plugin_class_name = rml.loader.core.RMLFMLLoadingPlugin

# AssetMover
# Convenient way to allow downloading of assets from official vanilla Minecraft servers, CurseForge, or any direct links
# Documentation: https://github.com/CleanroomMC/AssetMover
use_asset_mover = false
asset_mover_version = 2.5




# Mirror
# Make it true and you will try to use mirror when orginal source fail
use_mirror = false
mirror_maven_url=crystal.app.lss233.com/repositories/minecraft
#mirror_maven_url=download.mcbbs.net/maven