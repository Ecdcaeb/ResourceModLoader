buildscript {
    repositories {
        if (use_mirror_url == "true") {
            // clear all proxy settings, this is available for global
            System.clearProperty "http.proxyHost"
            System.clearProperty "http.proxyPort"
            System.clearProperty "https.proxyHost"
            System.clearProperty "https.proxyPort"
            System.clearProperty "socksProxyHost"
            System.clearProperty "socksProxyPort"
            System.setProperty "java.net.useSystemProxies", "false"

            maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
            maven { url "https://${mirror_maven_url}" }
        } else {
            mavenCentral()
            maven { url "https://maven.minecraftforge.net" }
        }

    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3.4"
    }
}

boolean useMirror = use_mirror_url == "true"
if (useMirror) apply from: "mirror.gradle"
apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'java'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.0.8"
group = "com.ideallandframework.moremomostories" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "ResourceModLoader"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.12.2-14.23.5.2860"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven { url = "https://repo.spongepowered.org/maven" }
    if (useMirror) {
        // remove minecraft and forge maven repositories to avoid interference
        removeIf {
            it instanceof MavenArtifactRepository &&
                (it.url.toString() == "https://repo.maven.apache.org/maven2/" ||
                it.url.toString() == "https://maven.minecraftforge.net" ||
                it.url.toString() == "https://libraries.minecraft.net/")
        }
        // add mirror repositories
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "file://${projectDir}/.gradle/local-repo" }
        maven { url "https://${mirror_maven_url}" }
    }
}

dependencies {


    compile files('libs/KubeJS-forge-1.12.2-1.0.0.24.jar')
    compile files('libs/CraftTweaker2-1.12-4.1.17.jar')
    compile files('libs/groovyscript-0.8.0.jar')
    //Magic_Circle-1.0.1.jar
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"

    // real examples
    //compile "com.mod-buildcraft:buildcraft:6.0.8:dev"  // adds buildcraft to the dev env
    //compile "com.googlecode.efficient-java-matrix-library:ejml:0.24" // adds ejml to the dev env

    // the "provided" configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // the deobf configurations:  "deobfCompile" and "deobfProvided" are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile "com.mod-buildcraft:buildcraft:6.0.8:dev"
    //deobfProvided "com.mod-buildcraft:buildcraft:6.0.8:dev"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

sourceSets {
    main {
        output.resourcesDir = file('build/combined')
        java.outputDir = file('build/combined')
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes([
                "FMLCorePlugin": "mods.Hileb.rml.core.RMLFMLLoadingPlugin",
                "Building-Time":new java.text.SimpleDateFormat("yyyy-MM-dd hh:mm:ss").format(new java.util.Date()),
                "Author":"Hileb"
        ])
    }
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        // replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

tasks.register('buildExample', Zip) {
    archiveName = "example.zip"
    destinationDir = file("run/mods")

    from "dev/example"
}
tasks.register('releaseExample', Zip) {
    archiveName = "example-"+version+".zip"
    destinationDir = file("releases/example")

    from "dev/example"
}
tasks.register('buildRMDK', Zip) {
    archiveName = "rmdk-"+version+".zip"
    destinationDir = file("releases/rmdk")
    from "rmdk"
}
